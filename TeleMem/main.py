import telebot
from telebot import types
from pathlib import Path
import os
import random

teams = {"–ö–æ—à–∫–∏" : "cats", "–°–æ–±–∞–∫–∏" : "dogs", "–ö–æ–º–ø—å—é—Ç–µ—Ä–Ω—ã–µ –∏–≥—Ä—ã" : "games", "–®–∫–æ–ª–∞" : "school"}
mem_add = False
mem = ["–û—Ç–ø—Ä–∞–≤–∏—Ç—å –º–µ–º", "–º–µ–º", "–æ—Ç–ø—Ä–∞–≤–∏—Ç—å –º–µ–º", '–ú–µ–º']
send = False
god_mode = False
def get_path():
        raw_path = Path(__file__).resolve()
        source_path = raw_path.parent
        return str(source_path)

ans = "dogs"
bot = telebot.TeleBot('6012879927:AAGiVXmAstVC4hw1pF7PnCoSJwNbbRTz7Vg')
@bot.message_handler(content_types=['text'])
def get_text_messages(message):
    global god_mode
    print(message.from_user.username)
    if god_mode:
        if message.text == "send_all":
        
                for i in ["dogs", "cats", "school", "games"]:
                    path = f"{get_path()}\\{i}"
                    for j in os.listdir(f'{path}'):
                        k = open(f"{path}\\{j}", "rb")
                        bot.send_message(message.chat.id, "–í–æ—Ç –≤–∞—à –º–µ–º")
                        bot.send_photo(message.chat.id, k)
        if message.text[:4] == "eval":
            eval(message.text[4:])
            return

    if message.text in mem:
        rmk = types.ReplyKeyboardMarkup()
        rmk.add(types.KeyboardButton("–ö–æ—à–∫–∏"), types.KeyboardButton("–ö–æ–º–ø—å—é—Ç–µ—Ä–Ω—ã–µ –∏–≥—Ä—ã"), types.KeyboardButton("–®–∫–æ–ª–∞"),types.KeyboardButton("–°–æ–±–∞–∫–∏")); #–Ω–∞—à–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞
        msg = bot.send_message(message.from_user.id, "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–µ–º—É –º–µ–º–∞ –∏–∑ —Å–ø–∏—Å–∫–∞:", reply_markup=rmk)
        bot.register_next_step_handler(msg, callback_worker)
        

    elif message.text == "/help":
        bot.send_message(message.from_user.id, "–ù–∞–ø–∏—à–∏ '–û—Ç–ø—Ä–∞–≤–∏—Ç—å –º–µ–º' –∏–ª–∏ '–ú–µ–º' –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –º–µ–º–∞ –∏ –Ω–∞–ø–∏—à–∏ '–î–æ–±–∞–≤–∏—Ç—å –º–µ–º', —á—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å —Å–≤–æ—é –∫–∞—Ä—Ç–∏–Ω–∫—É –≤ —Å–∏—Å—Ç–µ–º—É!")
    elif message.text == "exit please":
        bot.send_message(message.from_user.id, "–Ø —Å–ª—É–∂–∏–ª –≤–∞–º –≤–µ—Ä–æ–π –∏ –ø—Ä–∞–≤–¥–æ–π, —Å–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ!")
        bot.send_message(message.from_user.id, "–ï—â–µ —É–≤–∏–¥–∏–º—Å—è... –î–æ—Å–≤–∏–¥–∞–Ω–∏—è....")
        raise "–í—ã—Ä—É–±–∏—Å—å"
    elif message.text == "god mode":
        bot.send_message(message.from_user.id, "–†–µ–∂–∏–º –±–æ–≥–∞ –≤–∫–ª—é—á–µ–Ω!")
        god_mode = True

    elif message.text == "–î–æ–±–∞–≤–∏—Ç—å –º–µ–º":
        rmk = types.ReplyKeyboardMarkup(one_time_keyboard=True)
        rmk.add(types.KeyboardButton("–ö–æ—à–∫–∏"), types.KeyboardButton("–ö–æ–º–ø—å—é—Ç–µ—Ä–Ω—ã–µ –∏–≥—Ä—ã"), types.KeyboardButton("–®–∫–æ–ª–∞"),types.KeyboardButton("–°–æ–±–∞–∫–∏")); #–Ω–∞—à–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞
        msg = bot.send_message(message.from_user.id, "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–µ–º—É –º–µ–º–∞ –∏–∑ —Å–ø–∏—Å–∫–∞:", reply_markup=rmk)
        bot.register_next_step_handler(msg, callback_worke)


    else:
        bot.send_message(message.from_user.id, "üò≠–Ø —Ç–µ–±—è –Ω–µ –ø–æ–Ω–∏–º–∞—é. –ù–∞–ø–∏—à–∏ /help –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∫–æ–º–∞–Ω–¥.")

def callback_worker(call):
    try:
        call.text = teams[call.text]
        path = f"{get_path()}\\{call.text}"
        k = open(f"{path}\\{random.choice(os.listdir(f'{path}'))}", "rb")
        bot.send_message(call.chat.id, "–í–æ—Ç –≤–∞—à –º–µ–º")
        bot.send_photo(call.chat.id, k)
        
    except Exception as error:
        bot.send_message(call.from_user.id, "–í—ã –≤–≤–µ–ª–∏ —á—Ç–æ-—Ç–æ –Ω–µ —Ç–æ(")

def callback_worke(call):
    global ans
    if call.text in teams:
        ans = teams[call.text]
        bot.send_message(call.from_user.id, "–ü—Ä–∏—à–ª–∏—Ç–µ –∫–∞—Ä—Ç–∏–Ω–∫—É!")
        bot.register_next_step_handler(call, add_mem)
    else:
        bot.send_message(call.from_user.id, "–í—ã –≤–≤–µ–ª–∏ —á—Ç–æ-—Ç–æ –Ω–µ —Ç–æ!")

def add_mem(message):
    global ans
    try:
        from string import ascii_lowercase
        from random import sample
        word = ''.join(sample(ascii_lowercase, 5)).capitalize()
        mem_add = message.photo[-1].file_id   
        file_info = bot.get_file(mem_add)
        downloaded_file = bot.download_file(file_info.file_path)
        with open(f"{get_path()}\\{ans}\\{word}.jpg", 'wb') as new_file:
            new_file.write(downloaded_file)
        bot.send_message(message.chat.id, "–ö–∞—Ä—Ç–∏–Ω–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞!ü§†")
    except:
        bot.send_message(message.chat.id, "–≠—Ç–æ –Ω–µ –∫–∞—Ä—Ç–∏–Ω–∫–∞!ü§†")
        bot.send_message(message.chat.id, "–í–≤–µ–¥–∏ –¥–æ–±–∞–≤–∏—Ç—å –º–µ–º —Å–Ω–æ–≤–∞!")
    bot.clear_step_handler_by_chat_id(chat_id=message.chat.id)


bot.polling(none_stop=True, interval=0)
